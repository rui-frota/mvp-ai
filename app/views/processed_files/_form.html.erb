<%= bootstrap_form_with(model: processed_file, local: true, html: { multipart: true, class: "needs-validation", novalidate: true }) do |form| %>
  <% if processed_file.errors.any? %>
    <div class="alert alert-danger" role="alert">
      <h5 class="alert-heading">
        <i class="bi bi-exclamation-triangle me-2"></i>
        <%= t('processed_files.form.errors_title', count: processed_file.errors.count) %>
      </h5>
      <ul class="mb-0">
        <% processed_file.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="card border-0 shadow-lg" style="background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%); backdrop-filter: blur(10px); border-radius: 12px; overflow: hidden;">
    <div class="card-header border-0" style="background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #ec4899 100%); color: white;">
      <h5 class="card-title mb-0 d-flex align-items-center">
        <div style="background: rgba(255,255,255,0.2); border-radius: 50%; padding: 8px; margin-right: 12px;">
          <i class="bi bi-file-earmark-arrow-up" style="font-size: 1.2rem;"></i>
        </div>
        <%= t('processed_files.form.upload_document') %>
      </h5>
    </div>
    <div class="card-body p-4">
      <div class="mb-4">
        <%= form.file_field :document, 
          class: "form-control form-control-lg border-0 shadow-sm custom-input", 
          accept: ".txt,.pdf,.doc,.docx,.md",
          required: true,
          "data-bs-toggle": "tooltip",
          title: t('processed_files.form.file_tooltip'),
          placeholder: t('processed_files.form.file_placeholder') %>
        <div class="form-text mt-2">
          <i class="bi bi-info-circle me-1 text-primary"></i>
          <span style="color: #6c757d;"><%= t('processed_files.form.supported_formats') %></span>
        </div>
      </div>
      
      <div class="mb-4">
        <%= form.select :action_type, 
          grouped_options_for_select([
            [t('processed_files.action_type_groups.summary_types'), [
              [t('processed_files.action_types.detailed'), 'detailed'],
              [t('processed_files.action_types.brief'), 'brief'],
              [t('processed_files.action_types.bullet_points'), 'bullet_points'],
              [t('processed_files.action_types.executive'), 'executive']
            ]],
            [t('processed_files.action_type_groups.translation'), [
              [t('processed_files.action_types.translate_br_us'), 'translate_br_us'],
              [t('processed_files.action_types.translate_us_br'), 'translate_us_br']
            ]],
            [t('processed_files.action_type_groups.advanced_analysis'), [
              [t('processed_files.action_types.sentiment_analysis'), 'sentiment_analysis'],
              [t('processed_files.action_types.keyword_extraction'), 'keyword_extraction'],
              [t('processed_files.action_types.theme_identification'), 'theme_identification'],
              [t('processed_files.action_types.structure_analysis'), 'structure_analysis']
            ]],
            [t('processed_files.action_type_groups.text_processing'), [
              [t('processed_files.action_types.grammar_correction'), 'grammar_correction'],
              [t('processed_files.action_types.text_simplification'), 'text_simplification'],
              [t('processed_files.action_types.standard_formatting'), 'standard_formatting']
            ]],
            [t('processed_files.action_type_groups.reports'), [
              [t('processed_files.action_types.full_report'), 'full_report'],
              [t('processed_files.action_types.executive_report'), 'executive_report'],
              [t('processed_files.action_types.comparative_analysis'), 'comparative_analysis'],
              [t('processed_files.action_types.quality_metrics'), 'quality_metrics']
            ]]
          ], processed_file.action_type || 'detailed'),
          {},
          { class: "form-select form-select-lg border-0 shadow-sm custom-select" } %>
        <div class="form-text mt-2">
          <i class="bi bi-gear me-1 text-primary"></i>
          <span style="color: #6c757d;"><%= t('processed_files.form.action_type_help') %></span>
        </div>
      </div>
      
      <div class="d-grid">
        <button id="process-btn" type="button" 
          class="btn btn-lg border-0 shadow-lg" 
          style="background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #ec4899 100%); color: white; border-radius: 12px; padding: 15px; transition: all 0.3s ease;"
          onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 8px 25px rgba(99, 102, 241, 0.4)'"
          onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='0 4px 15px rgba(0,0,0,0.2)'"
          onclick="showLoadingAndSubmit()" 
          data-bs-toggle="tooltip" 
          title="<%= t('processed_files.form.submit_tooltip') %>">
          <span id="btn-text" class="d-flex align-items-center justify-content-center">
            <div style="background: rgba(255,255,255,0.2); border-radius: 50%; padding: 6px; margin-right: 10px;">
              <i class="bi bi-cpu" style="font-size: 1.1rem;"></i>
            </div>
            <%= t('processed_files.form.submit_button') %>
          </span>
        </button>
      </div>
    </div>
  </div>
<% end %>

<div id="center-spinner" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(0,0,0,0.85); z-index:999999; justify-content:center; align-items:center; backdrop-filter: blur(3px);">
  <div class="ai-loading-container">
    <!-- Neural Network Animation -->
    <div class="neural-network">
      <div class="node node-1"></div>
      <div class="node node-2"></div>
      <div class="node node-3"></div>
      <div class="node node-4"></div>
      <div class="connection connection-1"></div>
      <div class="connection connection-2"></div>
      <div class="connection connection-3"></div>
    </div>
    
    <!-- AI Brain Icon -->
    <div class="ai-brain">
      <i class="bi bi-cpu-fill"></i>
    </div>
    
    <!-- Rotating Circles -->
    <div class="ai-rings">
      <div class="ring ring-1"></div>
      <div class="ring ring-2"></div>
      <div class="ring ring-3"></div>
    </div>
    
    <!-- Loading Text -->
    <div class="ai-text">
      <h4 class="text-white fw-bold mb-2">
        <i class="bi bi-lightning-charge me-2"></i>
        <%= t('processed_files.form.ai_processing') %>
      </h4>
      <p class="text-white-50 mb-0"><%= t('processed_files.form.ai_processing_description') %></p>
      
      <!-- Progress Dots -->
      <div class="progress-dots mt-3">
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
        <span class="dot"></span>
      </div>
    </div>
  </div>
</div>

<script>
  // Initialize Bootstrap tooltips
  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
  var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl)
  })
  
  // File upload validation
  document.querySelector('input[type="file"]').addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      const fileSize = file.size / 1024 / 1024; // Convert to MB
      if (fileSize > 10) {
        alert('<%= t('processed_files.form.file_too_large') %>');
        e.target.value = '';
      }
    }
  });
  
  // Loading function for form submission
  function showLoadingAndSubmit() {
    // Validate form before showing loader
    const form = document.querySelector('form');
    const fileInput = document.querySelector('input[type="file"]');
    
    if (!fileInput.files.length) {
      alert('<%= t('processed_files.form.select_file_alert') %>');
      return;
    }
    
    // Show loading spinner
    document.getElementById('center-spinner').style.display = 'flex';
    
    // Submit the form
    form.requestSubmit();
  }
</script>

<style>
  /* Estilos customizados para os inputs com maior especificidade */
  .card .form-control.custom-input,
  .card .form-select.custom-select {
    background-color: rgba(241, 245, 249, 0.85) !important;
    border: 1px solid rgba(226, 232, 240, 0.6) !important;
    border-radius: 12px !important;
    color: #374151 !important; /* Cor do texto mais escura */
  }
  
  .card .form-control.custom-input:focus,
  .card .form-select.custom-select:focus {
    background-color: rgba(248, 250, 252, 0.95) !important;
    border-color: rgba(99, 102, 241, 0.5) !important;
    box-shadow: 0 0 0 0.2rem rgba(99, 102, 241, 0.25) !important;
    color: #1f2937 !important; /* Cor do texto ainda mais escura no foco */
  }
  
  .card .form-select.custom-select {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23374151' viewBox='0 0 16 16'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>") !important;
    background-repeat: no-repeat !important;
    background-position: right 12px center !important;
    padding-right: 40px !important;
  }
  
  /* Fallback para todos os form-control e form-select */
  .form-control, .form-select {
    background-color: rgba(241, 245, 249, 0.85) !important;
    border: 1px solid rgba(226, 232, 240, 0.6) !important;
    border-radius: 12px !important;
    color: #374151 !important; /* Cor do texto mais escura */
  }
  
  .form-control:focus, .form-select:focus {
    background-color: rgba(248, 250, 252, 0.95) !important;
    border-color: rgba(99, 102, 241, 0.5) !important;
    box-shadow: 0 0 0 0.2rem rgba(99, 102, 241, 0.25) !important;
    color: #1f2937 !important; /* Cor do texto ainda mais escura no foco */
  }
  
  .form-select {
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23374151' viewBox='0 0 16 16'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>") !important;
    background-repeat: no-repeat !important;
    background-position: right 12px center !important;
    padding-right: 40px !important;
  }
  
  /* Estilo específico para as opções do select */
  .form-select option {
    color: #1f2937 !important;
    background-color: #ffffff !important;
  }
  
  /* AI Loading Styles */
  .ai-loading-container {
    position: relative;
    text-align: center;
    padding: 3rem;
  }
  
  /* Neural Network Animation */
  .neural-network {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 200px;
    height: 200px;
    opacity: 0.3;
  }
  
  .node {
    position: absolute;
    width: 8px;
    height: 8px;
    background: linear-gradient(45deg, #00f5ff, #0080ff);
    border-radius: 50%;
    animation: pulse-node 2s infinite ease-in-out;
  }
  
  .node-1 { top: 20px; left: 50px; animation-delay: 0s; }
  .node-2 { top: 50px; left: 150px; animation-delay: 0.5s; }
  .node-3 { top: 120px; left: 30px; animation-delay: 1s; }
  .node-4 { top: 150px; left: 170px; animation-delay: 1.5s; }
  
  .connection {
    position: absolute;
    background: linear-gradient(90deg, transparent, #00f5ff, transparent);
    height: 1px;
    animation: data-flow 3s infinite linear;
  }
  
  .connection-1 {
    top: 24px;
    left: 58px;
    width: 90px;
    transform: rotate(15deg);
  }
  
  .connection-2 {
    top: 54px;
    left: 35px;
    width: 120px;
    transform: rotate(45deg);
  }
  
  .connection-3 {
    top: 124px;
    left: 38px;
    width: 130px;
    transform: rotate(-20deg);
  }
  
  /* AI Brain Icon */
  .ai-brain {
    position: relative;
    z-index: 10;
    margin-bottom: 2rem;
  }
  
  .ai-brain i {
    font-size: 4rem;
    color: #00f5ff;
    animation: brain-pulse 1.5s infinite ease-in-out;
    filter: drop-shadow(0 0 20px rgba(0, 245, 255, 0.5));
  }
  
  /* Rotating Rings */
  .ai-rings {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 150px;
    height: 150px;
  }
  
  .ring {
    position: absolute;
    border: 2px solid transparent;
    border-radius: 50%;
    animation: rotate 3s linear infinite;
  }
  
  .ring-1 {
    width: 80px;
    height: 80px;
    top: 35px;
    left: 35px;
    border-top: 2px solid #00f5ff;
    border-right: 2px solid #00f5ff;
    animation-duration: 2s;
  }
  
  .ring-2 {
    width: 120px;
    height: 120px;
    top: 15px;
    left: 15px;
    border-bottom: 2px solid #0080ff;
    border-left: 2px solid #0080ff;
    animation-duration: 3s;
    animation-direction: reverse;
  }
  
  .ring-3 {
    width: 150px;
    height: 150px;
    top: 0;
    left: 0;
    border-top: 1px solid rgba(0, 245, 255, 0.3);
    border-right: 1px solid rgba(0, 245, 255, 0.3);
    animation-duration: 4s;
  }
  
  /* Loading Text */
  .ai-text {
    position: relative;
    z-index: 10;
    margin-top: 1rem;
  }
  
  .ai-text h4 {
    animation: text-glow 2s infinite ease-in-out;
  }
  
  /* Progress Dots */
  .progress-dots {
    display: flex;
    justify-content: center;
    gap: 8px;
  }
  
  .dot {
    width: 8px;
    height: 8px;
    background: #00f5ff;
    border-radius: 50%;
    animation: dot-bounce 1.4s infinite ease-in-out both;
  }
  
  .dot:nth-child(1) { animation-delay: -0.32s; }
  .dot:nth-child(2) { animation-delay: -0.16s; }
  .dot:nth-child(3) { animation-delay: 0s; }
  .dot:nth-child(4) { animation-delay: 0.16s; }
  
  /* Animations */
  @keyframes pulse-node {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.5);
      opacity: 0.7;
    }
  }
  
  @keyframes data-flow {
    0% {
      background-position: -100px 0;
    }
    100% {
      background-position: 100px 0;
    }
  }
  
  @keyframes brain-pulse {
    0%, 100% {
      transform: scale(1);
      filter: drop-shadow(0 0 20px rgba(0, 245, 255, 0.5));
    }
    50% {
      transform: scale(1.1);
      filter: drop-shadow(0 0 30px rgba(0, 245, 255, 0.8));
    }
  }
  
  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
  @keyframes text-glow {
    0%, 100% {
      text-shadow: 0 0 5px rgba(0, 245, 255, 0.3);
    }
    50% {
      text-shadow: 0 0 20px rgba(0, 245, 255, 0.6), 0 0 30px rgba(0, 245, 255, 0.4);
    }
  }
  
  @keyframes dot-bounce {
    0%, 80%, 100% {
      transform: scale(0.8);
      opacity: 0.5;
    }
    40% {
      transform: scale(1.2);
      opacity: 1;
    }
  }
</style>
